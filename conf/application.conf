application.secret="y@Ph;u`HN0t@ZqCmDsKxSb4O=pGk5ab>Fs7Een1HsCEfdeN`W1HvbwB/g_GGeOSi"
application.langs="en"

mongodb.db = "hbbTVPlugin"

# this is needed for self signed certificates
ws.acceptAnyCertificate=true
ws.useragent="HbbTVPlugin"
ws.timeout.connection=10000
ws.timeout.idle = 3000000
http.timeout = 3000000

# hms api credentials
hms.username="nutzername"
hms.password="passwort"
hms.apiBroadcastURL="https://62.67.13.54/hmsWSBroadcast/api"
#hms.apiBroadcastURL="https://localhost:4444/hmsCCBroadcast/api"
hms.apiTranscodeURL="https://62.67.13.54/hmsWSTranscode/api"
hms.crawler.period=10
hms.testMode = true
hms.minFileSize = 1048576
#hms.localDownload = "http://localhost:8080/nothing-to-hide-360p.mp4"
#hms.encoding.callbackUrl = "http://srv1.indarium.de:9080/api/v1/hmsCallBack"
hms.encoding.callbackUrl = "http://hbbtvplugin.indarium.de/api/v1/hmsCallBack"
hms.encoding.profile = "D1_PAL_WEB_HIGH"
hms.encoding.notification.finished = true
hms.encoding.notification.error = true
hms.encoding.notification.status = true
## HMS Transcoder Activation Configs
##
##   To get the video source file we either download it from the URL in the show we receive from HMS or create a
##   transcode job.
##   Which source we choose depends on the following configuration items.
##     - hms.transcoder.activate.global: (de)activates transcoder globally -- defaults to false
##     - hms.transcoder.activate.channels: activate comma separated list of channels (only if hms.transcoder.activate.global=false)
##     - hms.transcoder.deactivate.channels: deactivate comma separated list of channels (only if hms.transcoder.deactivate.channels=true)
##
##   Notes:
##     - comma separated lists are case insensitive and surrounding spaces will be trimmed
##     - comma separated lists default to empty sets
#hms.transcoder.activate.global = true
hms.transcoder.activate.channels = "roktv, fischtv"
#hms.transcoder.deactivate.channels = "odf"

## We update the status of open transcode jobs every x seconds. x can be configured with this key (defaults to 300).
#hms.transcoder.status.update.interval = 30

## By default we only import a station's latest show. This config allows us to import all it's shows.
## Station names can be upper or lowercases since we operate on lowercase only strings internally.
hms.import.all.shows = "roktv, fischtv"

##
## AWS Config
##
aws.accessKeyId="AmazonAccessKeyId"
aws.secretKey="AmazonSecretKey"

#default is us-east-1
s3.region="eu-west-1"
aws.bucket="BUCKET_NAME_NOT_SET"

cdn.baseUrl = "http://cdn.mabb.indarium.de"

# initial data
startup.initialData.load=true

####
#### Webjazz Configs
####

## webjazz.url can be configured to configure another url. the code uses "http://mmv-mediathek.de/import/vimeo.php" as
## hardcoded default if no value is configured
#webjazz.url="http://mmv-mediathek.de/import/vimeo.php"

## Webjazz Notification Configs
##
##   available configs
##     - webjazz.notify.activate.global: (de)activates notifications globally -- defaults to false
##     - webjazz.notify.activate.channels: activate comma separated list of channels (only if webjazz.notify.activate.global=false)
##     - webjazz.notify.deactivate.channels: deactivate comma separated list of channels (only if webjazz.notify.deactivate.channels=true)
##
##   Notes:
##     - comma separated lists are case insensitive and surrounding spaces will be trimmed
##     - comma separated lists default to empty sets
#webjazz.notify.activate.global=true
webjazz.notify.activate.channels = "roktv, fischtv"
#webjazz.notify.deactivate.channels="odf"

#### Vimeo related configs
### Job: checking vimeo encoding status
# job checking status of encodings already done by vimeo: upper limit of how many show we check in one iteration
vimeo.encoding.batch.size=25
# how often do we check vimeo videos for their encoding status (in seconds)
vimeo.encoding.check-interval=120
### Upload to Vimeo Configuration
##   available configs
##     - vimeo.activate.global: (de)activates vimeo uploads globally -- defaults to false
##     - vimeo.activate.channels: activate comma separated list of channels (only if vimeo.activate.global=false)
##     - vimeo.deactivate.channels: deactivate comma separated list of channels (only if vimeo.activate.global=true)
##
##   Notes:
##     - comma separated lists are case insensitive and surrounding spaces will be trimmed
##     - comma separated lists default to empty sets
# vimeo.activate.global=true
vimeo.activate.channels = "roktv, fischtv"
# vimeo.deactivate.channels="odf"

#### Embed Presets
##   to query list of available presets:
##     curl -X GET -k "Authorization: bearer ${ACCESS-TOKEN}" "https://api.vimeo.com/users/{user_id}/presets"
# embed preset assigned to all uploaded videos (defaults to "mmv")
#vimeo.embed.preset=mmv

## Download Queue related configs
##
##   The download and upload of a video can fail and needs extra handling if the HMS transcoder is involved. As a
##   solution to this we introduced a persistent download queue (see collection "downloadQueue").
##   It's behaviour is configured through the following keys.
##
# interval (in seconds) between download/upload queue checks (including delay after server start). defaults to 120 seconds.
#download.queue.delay.start=120
# interval between two executions of the download queue scheduler (defaults to 10 seconds if not defined)
#download.queue.retry.interval=10
# after how many seconds do we retry a download after the first failure (defaults to 60 seconds if not defined)
#download.retry.first=60
# delay of retried download/upload after first retry is: retryCount * x seconds (x defaults to 300 if not defined)
#download.retry.afterFirst=300
# number of maximum download/upload retries (defaults to 5)
#download.retry.max=5
# number of maximum parallel download/upload retries (defaults to 1)
#download.parallel.max=1

#### Clean Up Job related
##  Description
##  ===========
##
##  If a station has the field "keepLastShows" we delete it's old shows through a cleanUp job while keeping only the
##  last n ones. For stations withouth this field we keep the shows indefinitely.
# clean up job start is delayed relative to the server start by x seconds (defaults to 75 seconds)
#cleanUp.shows.startUpDelay=75
# the interval between two executions of the clean up job in seconds (defaults to 30 minutes)
#cleanUp.shows.jobInterval=1800

akka {
  loglevel="DEBUG"
}